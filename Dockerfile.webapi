# etapa: construcción
FROM mcr.microsoft.com/dotnet/framework/sdk:4.8 AS build

# directorio de trabajo
WORKDIR C:/src

# copiando archivos 
COPY webapi/webapi/webapi.csproj ./webapi/
COPY webapi/webapi/. ./webapi/

# restaurando dependencias
RUN nuget restore ./webapi/webapi.csproj  -PackagesDirectory C:/src/webapi/packages

#RUN nuget install Microsoft.CodeDom.Providers.DotNetCompilerPlatform -Version 2.0.1 -OutputDirectory C:/src/webapi/packages
#RUN nuget install Microsoft.Bcl.AsyncInterfaces -Version 1.1.1 -OutputDirectory C:/src/webapi/packages
#RUN nuget install Swashbuckle.Core -OutputDirectory C:/src/webapi/packages
#RUN nuget install System.Buffers -OutputDirectory C:/src/webapi/packages
#RUN nuget install System.Memory -OutputDirectory C:/src/webapi/packages
RUN nuget Install-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform
RUN nuget Install-Package Microsoft.Bcl.AsyncInterfaces
RUN nuget Install-Package Swashbuckle.Core
RUN nuget Install-Package System.Buffers
RUN nuget Install-Package System.Memory
RUN nuget Install-Package System.Text.Json
RUN nuget Install-Package System.Threading.Tasks.Extensions
RUN nuget Install-Package System.ValueTuple
RUN nuget Install-Package Microsoft.AspNet.WebApi.Core -Version 5.2.9
RUN nuget Install-Package Microsoft.AspNet.WebApi.WebHost -Version 5.2.9
RUN nuget Install-Package Microsoft.AspNet.Mvc -Version 5.2.9

RUN mkdir C:\app\build 

# compilando
RUN msbuild ./webapi/webapi.csproj /p:Configuration=Release /p:OutputPath=C:\app\build

# etapa: ejecución
FROM mcr.microsoft.com/dotnet/framework/aspnet:4.8 AS runtime

# directorio de trabajo del contenedor
WORKDIR C:/app

# copiando los archivos a publicar
COPY --from=build C:/app/build . 

# exponiendo el puerto 8080 para acceder - activar el public en forwader port
EXPOSE 80

# punto de entrada de la aplicación
ENTRYPOINT ["webapi.exe"]
